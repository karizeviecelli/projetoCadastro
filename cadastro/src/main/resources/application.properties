spring.profiles.active=dev
# Configurações do banco de dados H2
spring.datasource.url=jdbc:h2:mem:cadastrodb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# URL de conexão com o banco de dados H2:
# - "mem:cadastrodb": Cria um banco de dados em memória chamado "cadastrodb".
# - "DB_CLOSE_DELAY=-1": Mantém o banco ativo enquanto a aplicação estiver em execução.
# - "DB_CLOSE_ON_EXIT=FALSE": Evita que o banco seja fechado automaticamente ao encerrar a aplicação.

spring.datasource.driverClassName=org.h2.Driver
# Define o driver JDBC para o banco de dados H2.

spring.datasource.username=sa
spring.datasource.password=
# Credenciais de acesso ao banco de dados H2:
# - "sa": Usuário padrão do H2.
# - Senha vazia (sem senha).

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Define o dialeto do Hibernate para o banco de dados H2.

spring.h2.console.enabled=true
# Habilita o console web do H2 para acessar e gerenciar o banco de dados.

spring.h2.console.path=/h2-console
# Define o caminho do console do H2. Neste caso, o console estará disponível em "/h2-console".

# Configurações do JPA e Hibernate
spring.jpa.hibernate.ddl-auto=update
# Define o comportamento do Hibernate para gerenciar o esquema do banco de dados:
# - "update": Atualiza o esquema do banco de dados automaticamente com base nas entidades.

spring.jpa.show-sql=true
# Habilita a exibição das consultas SQL geradas pelo Hibernate no console.

spring.jpa.properties.hibernate.format_sql=true
# Formata as consultas SQL exibidas no console para facilitar a leitura.

# Configurações do Thymeleaf
spring.thymeleaf.cache=false
# Desabilita o cache do Thymeleaf para que as alterações nos templates sejam refletidas imediatamente (útil para desenvolvimento).

spring.thymeleaf.prefix=classpath:/templates/
# Define o diretório onde os templates Thymeleaf estão localizados.

spring.thymeleaf.suffix=.html
# Define a extensão dos arquivos de template como ".html".

spring.thymeleaf.mode=HTML5
# Define o modo de processamento do Thymeleaf como HTML5.

spring.thymeleaf.encoding=UTF-8
# Define a codificação dos templates como UTF-8.

spring.thymeleaf.servlet.content-type=text/html
# Define o tipo de conteúdo dos templates como "text/html".

spring.thymeleaf.enabled=true
# Habilita o Thymeleaf como mecanismo de template.

# Configurações do servidor
server.port=8080
# Define a porta em que o servidor será executado (8080 por padrão).

server.error.whitelabel.enabled=false
# Desabilita a página de erro padrão do Spring Boot (whitelabel).

# Configurações de logging
logging.level.org.springframework=INFO
# Define o nível de log para as classes do Spring Framework como "INFO".

logging.level.com.example=DEBUG
# Define o nível de log para as classes do pacote "com.example" como "DEBUG".

logging.file.name=logs/cadastro.log
# Define o arquivo onde os logs serão salvos. Neste caso, "cadastro.log" na pasta "logs".

# Configurações adicionais
spring.mvc.view.prefix=/templates/
# Define o prefixo para localizar os templates.

spring.mvc.view.suffix=.html
# Define o sufixo para localizar os templates.

spring.main.allow-bean-definition-overriding=true
# Permite que definições de beans sejam sobrescritas.

# Configurações de internacionalização
spring.messages.basename=messages
# Define o arquivo base para mensagens de internacionalização como "messages".

spring.messages.encoding=UTF-8
# Define a codificação dos arquivos de mensagens como UTF-8.

spring.messages.fallback-to-system-locale=false
# Desabilita o fallback para o locale do sistema operacional.

# Configurações de segurança (se aplicável)
# spring.security.user.name=admin
# Nome de usuário padrão para autenticação básica (comentado).

# spring.security.user.password=admin
# Senha padrão para autenticação básica (comentado).

# spring.security.user.roles=USER,ADMIN
# Define os papéis padrão para o usuário (comentado).

# Configurações de cache (se aplicável)
spring.cache.type=simple
# Define o tipo de cache como "simple" (cache em memória).

spring.cache.cache-names=produtos
# Define o nome do cache como "produtos".

spring.cache.caffeine.spec=maximumSize=100,expireAfterAccess=600s
# Configura o cache com as seguintes propriedades:
# - "maximumSize=100": Limita o cache a 100 entradas.
# - "expireAfterAccess=600s": Expira as entradas 600 segundos após o último acesso.

# Configurações de upload de arquivos (se aplicável)
spring.servlet.multipart.max-file-size=2MB
# Define o tamanho máximo de um arquivo para upload como 2MB.

spring.servlet.multipart.max-request-size=2MB
# Define o tamanho máximo de uma requisição multipart como 2MB.

# Configurações de email (se aplicável)
spring.mail.host=smtp.example.com
# Define o servidor SMTP para envio de emails.

spring.mail.port=587
# Define a porta do servidor SMTP (587 para TLS).

