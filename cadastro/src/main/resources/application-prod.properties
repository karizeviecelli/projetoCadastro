# Configuração do banco de dados MySQL para o ambiente de produção
spring.datasource.url=jdbc:mysql://localhost:3306/produtosdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8&connectionTimeZone=UTC
# URL de conexão com o banco de dados MySQL:
# - "localhost:3306": Indica que o banco de dados está rodando localmente na porta 3306.
# - "produtosdb": Nome do banco de dados. Será criado automaticamente se não existir.
# - "createDatabaseIfNotExist=true": Cria o banco de dados "produtosdb" se ele não existir.
# - "useSSL=false": Desativa o uso de SSL para a conexão.
# - "allowPublicKeyRetrieval=true": Permite a recuperação da chave pública para autenticação (necessário para conexões sem SSL).
# - "useUnicode=true": Habilita o suporte a caracteres Unicode.
# - "characterEncoding=utf8": Define o conjunto de caracteres como UTF-8.
# - "connectionTimeZone=UTC": Define o fuso horário da conexão como UTC.

spring.datasource.username=root
# Nome de usuário para acessar o banco de dados MySQL. O padrão é "root".

spring.datasource.password=
# Senha para acessar o banco de dados MySQL. Neste caso, está vazia (sem senha).

# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# (Comentado) Define o driver JDBC para o MySQL. O Spring Boot detecta automaticamente o driver com base na dependência do MySQL.

# Configurações do Hibernate
spring.jpa.hibernate.ddl-auto=update
# Define o comportamento do Hibernate para gerenciar o esquema do banco de dados:
# - "update": Atualiza o esquema do banco de dados automaticamente com base nas entidades.

spring.jpa.show-sql=false
# Desabilita a exibição das consultas SQL geradas pelo Hibernate no console (recomendado para produção).

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Define o dialeto do Hibernate para o MySQL, permitindo que o Hibernate gere consultas SQL otimizadas para este banco de dados.
